# SignalSpot Nginx Configuration
# Place this file in /etc/nginx/sites-available/ and create symlink to sites-enabled

# Upstream for SignalSpot API (PM2 cluster)
upstream signalspot_api {
    # PM2 cluster instances
    server 127.0.0.1:3000 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

# Upstream for SignalSpot WebSocket
upstream signalspot_ws {
    server 127.0.0.1:3001;
    keepalive 32;
}

# API and WebSocket configuration (path-based routing)
server {
    listen 80;
    listen [::]:80;
    server_name lettie-dating.co.kr;

    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name lettie-dating.co.kr;

    # SSL 인증서 (Let's Encrypt 또는 기존 인증서 경로)
    ssl_certificate /etc/letsencrypt/live/lettie-dating.co.kr/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/lettie-dating.co.kr/privkey.pem;

    # SSL 설정
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # 보안 헤더
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # 로깅
    access_log /var/log/nginx/signalspot_access.log;
    error_log /var/log/nginx/signalspot_error.log;

    # 기존 Lettie 프로젝트 설정은 그대로 유지
    # location / {
    #     # 기존 Spring Boot 설정
    # }

    # SignalSpot API 라우팅
    location /signalspot/ {
        # CORS 헤더 (필요시)
        add_header Access-Control-Allow-Origin "https://lettie-dating.co.kr" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
        add_header Access-Control-Allow-Credentials "true" always;

        # OPTIONS 요청 처리
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Max-Age 86400;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }

        # URL 재작성 - /signalspot 제거
        rewrite ^/signalspot/(.*)$ /$1 break;

        # 프록시 설정
        proxy_pass http://signalspot_api;
        proxy_http_version 1.1;
        
        # 프록시 헤더
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # 타임아웃 설정
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # 버퍼 설정
        proxy_buffering off;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 16k;
        
        # 최대 업로드 크기 (파일 업로드용)
        client_max_body_size 10M;
        
        # Keep-alive
        proxy_set_header Connection "";
    }

    # SignalSpot WebSocket 라우팅
    location /signalspot/socket.io/ {
        # URL 재작성
        rewrite ^/signalspot/socket.io/(.*)$ /socket.io/$1 break;
        
        # WebSocket 프록시
        proxy_pass http://signalspot_ws;
        proxy_http_version 1.1;
        
        # WebSocket 업그레이드 헤더
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # 프록시 헤더
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket 타임아웃 (더 길게 설정)
        proxy_connect_timeout 7d;
        proxy_send_timeout 7d;
        proxy_read_timeout 7d;
        
        # 버퍼 비활성화 (실시간 통신)
        proxy_buffering off;
    }

    # 정적 파일 (업로드된 이미지 등)
    location /signalspot/uploads/ {
        alias /home/ubuntu/signalspot/apps/backend/uploads/;
        
        # 캐싱 설정
        expires 30d;
        add_header Cache-Control "public, immutable";
        
        # 이미지 타입만 허용
        location ~ \.(jpg|jpeg|png|gif|webp|svg)$ {
            add_header X-Content-Type-Options "nosniff" always;
        }
        
        # 다른 파일 타입 차단
        location ~ \.(php|jsp|asp|sh|cgi)$ {
            deny all;
        }
    }

    # 헬스체크 엔드포인트 (외부 모니터링용)
    location /signalspot/health {
        rewrite ^/signalspot/health$ /health break;
        proxy_pass http://signalspot_api;
        proxy_set_header Host $host;
        access_log off;  # 헬스체크 로그 비활성화
    }

    # Rate limiting zone (DDoS 방어)
    limit_req_zone $binary_remote_addr zone=signalspot:10m rate=10r/s;
    
    # API Rate limiting 적용
    location ~ ^/signalspot/api/ {
        limit_req zone=signalspot burst=20 nodelay;
        limit_req_status 429;
        
        # 나머지 설정은 /signalspot/와 동일
        rewrite ^/signalspot/(.*)$ /$1 break;
        proxy_pass http://signalspot_api;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Gzip 압축
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml application/atom+xml image/svg+xml text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype;
}