version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: signalspot-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE:-signalspot}
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../../scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - signalspot-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-postgres} -d ${DB_DATABASE:-signalspot}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: signalspot-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - signalspot-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # NestJS Backend
  backend:
    build:
      context: ../..
      dockerfile: apps/backend/Dockerfile
      target: runner
    container_name: signalspot-backend
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: ${BACKEND_PORT:-3000}
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: ${DB_USERNAME:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      DB_DATABASE: ${DB_DATABASE:-signalspot}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-1h}
    ports:
      - "${BACKEND_PORT:-3000}:3000"
    volumes:
      - ./src:/app/src:ro
      - ../../shared:/app/shared:ro
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - signalspot-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # React Native Metro Bundler (for mobile development)
  metro:
    build:
      context: ../..
      dockerfile: apps/frontend/Dockerfile.dev
      target: development
    container_name: signalspot-metro
    restart: unless-stopped
    environment:
      REACT_NATIVE_PACKAGER_HOSTNAME: 0.0.0.0
      NODE_ENV: development
    ports:
      - "${METRO_PORT:-8081}:8081"
    volumes:
      - ../frontend/src:/app/apps/frontend/src
      - ../../shared:/app/shared
      - metro_cache:/app/node_modules/.cache
    networks:
      - signalspot-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/status"]
      interval: 30s
      timeout: 10s
      retries: 3
    profiles:
      - mobile-dev

  # Development tools
  adminer:
    image: adminer:4-standalone
    container_name: signalspot-adminer
    restart: unless-stopped
    ports:
      - "${ADMINER_PORT:-8081}:8080"
    depends_on:
      - postgres
    networks:
      - signalspot-network
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  metro_cache:
    driver: local

networks:
  signalspot-network:
    driver: bridge 