version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    platform: linux/arm64
    container_name: signalspot-postgres
    restart: always
    env_file:
      - .env.production
    ports:
      - "${DB_PORT:-5432}:5432"
    environment:
      POSTGRES_DB: ${DB_DATABASE:-${DB_NAME}}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: md5
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../../init-db.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE:-${DB_NAME}}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - signalspot-network

  redis:
    image: redis:7-alpine
    container_name: signalspot-redis
    restart: always
    env_file:
      - .env.production
    ports:
      - "${REDIS_PORT:-6379}:6379"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-signalspot_redis_2024}
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-signalspot_redis_2024}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - signalspot-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  signalspot-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16